// File: lif_calcium.v
// Generated by MyHDL 0.11.45
// Date: Thu Jun 13 14:27:42 2024


`timescale 1ns/10ps

module lif_calcium (
    param_ca_en,
    param_caleak,
    state_calcium,
    state_caleak_cnt,
    spike_out,
    event_tref,
    state_calcium_next,
    state_caleak_cnt_next
);


input param_ca_en;
input [4:0] param_caleak;
input [2:0] state_calcium;
input [4:0] state_caleak_cnt;
input spike_out;
input event_tref;
output [2:0] state_calcium_next;
reg [2:0] state_calcium_next;
output [4:0] state_caleak_cnt_next;
reg [4:0] state_caleak_cnt_next;

reg ca_leak;



always @(ca_leak, state_calcium, param_ca_en, spike_out) begin: LIF_CALCIUM_UPDATE_CALCIUM
    if (param_ca_en) begin
        if ((spike_out && (!ca_leak) && (state_calcium == 0))) begin
            state_calcium_next = (state_calcium + 1);
        end
        else if ((ca_leak && (!spike_out) && (state_calcium > 0))) begin
            state_calcium_next = (state_calcium - 1);
        end
        else begin
            state_calcium_next = state_calcium;
        end
    end
    else begin
        state_calcium_next = state_calcium;
    end
end


always @(state_caleak_cnt, param_caleak, event_tref, param_ca_en) begin: LIF_CALCIUM_UPDATE_CALEAK
    if ((param_ca_en && (param_caleak > 0) && event_tref)) begin
        if (($signed({1'b0, state_caleak_cnt}) == ($signed({1'b0, param_caleak}) - 1))) begin
            state_caleak_cnt_next = 0;
            ca_leak = 1'b1;
        end
        else begin
            state_caleak_cnt_next = (state_caleak_cnt + 1);
            ca_leak = 1'b0;
        end
    end
    else begin
        state_caleak_cnt_next = state_caleak_cnt;
        ca_leak = 1'b0;
    end
end

endmodule
